pub fn createMino(minoType: char) -> Vec<[[i32; 4]; 4]>{
	let mut array = 
	match minoType {
		'i' => vec![[[0,0,0,0],
 			 		 [1,1,1,1],
					 [0,0,0,0],
					 [0,0,0,0]],

					[[0,1,0,0],
 					 [0,1,0,0],
					 [0,1,0,0],
					 [0,1,0,0]]],

		's' => vec![[[0,1,1,0],
					 [1,1,0,0],
					 [0,0,0,0],
					 [0,0,0,0]],

					[[1,0,0,0],
					 [1,1,0,0],
					 [0,1,0,0],
					 [0,0,0,0]]],

		'z' => vec![[[1,1,0,0],
					 [0,1,1,0],
					 [0,0,0,0],
					 [0,0,0,0]],

					[[0,1,0,0],
					 [1,1,0,0],
					 [1,0,0,0],
					 [0,0,0,0]]],

		't' => vec![[[0,1,0,0],
					 [1,1,1,0],
					 [0,0,0,0],
					 [0,0,0,0]],

					[[0,1,0,0],
					 [0,1,1,0],
					 [0,1,0,0],
					 [0,0,0,0]],

					[[0,0,0,0],
					 [1,1,1,0],
					 [0,1,0,0],
					 [0,0,0,0]],

					[[0,1,0,0],
					 [1,1,0,0],
					 [0,1,0,0],
					 [0,0,0,0]]],

		'o' => vec![[[0,1,1,0],
					 [0,1,1,0],
					 [0,0,0,0],
					 [0,0,0,0]]],

		'j' => vec![[[0,0,0,0],
					 [1,1,1,0],
					 [0,0,1,0],
					 [0,0,0,0]],

					[[0,1,0,0],
					 [0,1,0,0],
					 [1,1,0,0],
					 [0,0,0,0]],

					[[1,0,0,0],
					 [1,1,1,0],
					 [0,0,0,0],
					 [0,0,0,0]],

					[[0,1,1,0],
					 [0,1,0,0],
					 [0,1,0,0],
					 [0,0,0,0]]],

		'l' => vec![[[0,0,0,0],
					 [1,1,1,0],
					 [1,0,0,0],
					 [0,0,0,0]],

					[[1,1,0,0],
					 [0,1,0,0],
					 [0,1,0,0],
					 [0,0,0,0]],

					[[0,0,1,0],
					 [1,1,1,0],
					 [0,0,0,0],
					 [0,0,0,0]],

					[[0,1,0,0],
					 [0,1,0,0],
					 [0,1,1,0],
					 [0,0,0,0]]],

		_   => vec![[[0,0,0,0],
					 [0,0,0,0],
					 [0,0,0,0],
					 [0,0,0,0]]],

	};
	return array;

}